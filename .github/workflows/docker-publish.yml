name: Build and Push OpenAS2 Docker Images with Dynamic Versioning

on:
  push:
    branches:
      - '**'  # Runs on any branch push
  workflow_dispatch:  # Allows manual trigger

env:
  IMAGE_NAME: openas2app
  DOCKER_REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:

  ############################
  # 1️⃣ Setup and Cache Dependencies
  ############################
  setup:
    name: Setup & Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: |
            buildx-

      - name: Save Cache for Later Jobs
        run: echo "Cache setup complete"

  ############################
  # 2️⃣ Fetch the Latest Version & Generate New One
  ############################
  versioning:
    name: Determine Version
    runs-on: ubuntu-latest
    needs: setup  # Ensures setup completes first
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      branch: ${{ steps.get_version.outputs.branch }}
    steps:
      - name: Get Latest Version from Docker Hub
        id: get_version
        run: |
          EXISTING_TAG=$(curl -s https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}/tags \
            | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name' \
            | sort -V | tail -1)

          if [ -z "$EXISTING_TAG" ]; then
            echo "No existing version found. Setting version to 1.0.0"
            NEW_VERSION="1.0.0"
          else
            echo "Found existing version: $EXISTING_TAG"
            IFS='.' read -r MAJOR MINOR PATCH <<< "$EXISTING_TAG"
            PATCH=$((PATCH+1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          fi

          echo "version=$NEW_VERSION" >> $GITHUB_ENV
          echo "branch=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "::set-output name=version::$NEW_VERSION"
          echo "::set-output name=branch::${GITHUB_REF##*/}"

  ############################
  # 3️⃣ Build and Push OpenAS2 Server Image
  ############################
  build-openas2:
    name: Build & Push OpenAS2 Server
    runs-on: ubuntu-latest
    needs: [setup, versioning]  # Waits for cache setup & versioning jobs
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push OpenAS2 Server Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.versioning.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.versioning.outputs.branch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  ############################
  # 4️⃣ Build and Push OpenAS2 Web UI Image
  ############################
  build-webui:
    name: Build & Push OpenAS2 Web UI
    runs-on: ubuntu-latest
    needs: [setup, versioning]  # Waits for cache setup & versioning jobs
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push OpenAS2 Web UI Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_WebUI
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-web:${{ needs.versioning.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-web:${{ needs.versioning.outputs.branch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-web:latest